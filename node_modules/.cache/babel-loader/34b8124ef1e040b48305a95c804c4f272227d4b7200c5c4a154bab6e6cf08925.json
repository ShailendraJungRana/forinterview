{"ast":null,"code":"var _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport { Fragment as _Fragment, jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction Navbar() {\n  _s();\n  const [nav, setNav] = useState(false);\n  const toggleNav = () => {\n    setNav(!nav);\n  };\n  const links = [{\n    id: 1,\n    link: 'about'\n  }, {\n    id: 2,\n    link: 'experience'\n  }, {\n    id: 3,\n    link: 'projects'\n  }, {\n    id: 4,\n    link: 'contact'\n  }];\n  return /*#__PURE__*/_jsxDEV(_Fragment, {}, void 0, false);\n}\n_s(Navbar, \"D4YBnY7qdcW+BMp5iKoDr7/TPlI=\");\n_c = Navbar;\nexport default Navbar;\nvar _c;\n$RefreshReg$(_c, \"Navbar\");","map":{"version":3,"names":["React","useState","Fragment","_Fragment","jsxDEV","_jsxDEV","Navbar","_s","nav","setNav","toggleNav","links","id","link","_c","$RefreshReg$"],"sources":["/Users/arun/Documents/project/for-interview/src/Components/Navbar.jsx"],"sourcesContent":["\nimport React, {useState} from 'react';\n\nfunction Navbar() {\n    const [nav,setNav]= useState(false);\n\n    const toggleNav=()=>{\n      setNav(!nav);\n    };\n  \n    const links=[\n      {\n        id:1,\n        link:'about',\n      },\n      {\n        id:2,\n        link:'experience',\n      },\n      {\n        id:3,\n        link:'projects',\n      },\n      {\n        id:4,\n        link:'contact',\n      },\n    ];\n\n  return (\n    <>\n    </>\n  )\n}\n\nexport default Navbar\n"],"mappings":";AACA,OAAOA,KAAK,IAAGC,QAAQ,QAAO,OAAO;AAAC,SAAAC,QAAA,IAAAC,SAAA,EAAAC,MAAA,IAAAC,OAAA;AAEtC,SAASC,MAAMA,CAAA,EAAG;EAAAC,EAAA;EACd,MAAM,CAACC,GAAG,EAACC,MAAM,CAAC,GAAER,QAAQ,CAAC,KAAK,CAAC;EAEnC,MAAMS,SAAS,GAACA,CAAA,KAAI;IAClBD,MAAM,CAAC,CAACD,GAAG,CAAC;EACd,CAAC;EAED,MAAMG,KAAK,GAAC,CACV;IACEC,EAAE,EAAC,CAAC;IACJC,IAAI,EAAC;EACP,CAAC,EACD;IACED,EAAE,EAAC,CAAC;IACJC,IAAI,EAAC;EACP,CAAC,EACD;IACED,EAAE,EAAC,CAAC;IACJC,IAAI,EAAC;EACP,CAAC,EACD;IACED,EAAE,EAAC,CAAC;IACJC,IAAI,EAAC;EACP,CAAC,CACF;EAEH,oBACER,OAAA,CAAAF,SAAA,mBACE,CAAC;AAEP;AAACI,EAAA,CA9BQD,MAAM;AAAAQ,EAAA,GAANR,MAAM;AAgCf,eAAeA,MAAM;AAAA,IAAAQ,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}